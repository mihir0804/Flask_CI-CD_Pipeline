name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        PYTHONPATH=. pytest

    - name: Build Docker image
      run: docker build . --file Dockerfile --tag my-flask-app:latest

    # The following steps are commented out because they require secrets (credentials)
    # that have not been provided. To enable them, you would need to add DOCKER_USERNAME,
    # DOCKER_PASSWORD, and HEROKU_API_KEY as secrets to your GitHub repository.

    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Push Docker image to Docker Hub
    #   run: |
    #     docker tag my-flask-app:latest ${{ secrets.DOCKER_USERNAME }}/my-flask-app:latest
    #     docker push ${{ secrets.DOCKER_USERNAME }}/my-flask-app:latest

    # - name: Deploy to Heroku
    #   uses: akhileshns/heroku-deploy@v3.12.12
    #   with:
    #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
    #     heroku_app_name: "your-heroku-app-name" # Replace with your Heroku app name
    #     heroku_email: "your-heroku-email" # Replace with your Heroku email
    #     usedocker: true
